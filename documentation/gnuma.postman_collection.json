{
	"info": {
		"_postman_id": "95d5a645-4410-45f3-a475-3830dcda3403",
		"name": "gnuma",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "list datasets",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/api/v1/datasets",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"datasets"
					]
				}
			},
			"response": []
		},
		{
			"name": "create dataset",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Test Dataset\",\r\n  \"description\": \"a simple test\",\r\n  \"mappings\": [\r\n    {\r\n      \"name\": \"ner-tag\",\r\n      \"description\": \"fields used as target for the named entity recognition task\",\r\n      \"tasks\": [\r\n        \"NAMED_ENTITY_RECOGNITION\"\r\n      ],\r\n      \"aliases\": [\r\n        \"ner\",\r\n        \"nertag\",\r\n        \"ner_tag\"\r\n      ]\r\n    }\r\n  ],\r\n  \"testDocuments\": [],\r\n  \"trainDocuments\": [\r\n        \"https://example.com/00.txt\", \"https://example.com/01.txt\", \"https://example.com/02.txt\",\r\n    \"https://example.com/03.txt\", \"https://example.com/04.txt\", \"https://example.com/05.txt\",\r\n    \"https://example.com/06.txt\", \"https://example.com/07.txt\", \"https://example.com/08.txt\",\r\n    \"https://example.com/09.txt\", \"https://example.com/10.txt\", \"https://example.com/11.txt\",\r\n    \"https://example.com/12.txt\", \"https://example.com/13.txt\", \"https://example.com/14.txt\",\r\n    \"https://example.com/15.txt\", \"https://example.com/16.txt\", \"https://example.com/17.txt\",\r\n    \"https://example.com/18.txt\", \"https://example.com/19.txt\", \"https://example.com/20.txt\",\r\n    \"https://example.com/21.txt\", \"https://example.com/22.txt\", \"https://example.com/23.txt\",\r\n    \"https://example.com/24.txt\", \"https://example.com/25.txt\", \"https://example.com/26.txt\",\r\n    \"https://example.com/27.txt\", \"https://example.com/28.txt\", \"https://example.com/29.txt\",\r\n    \"https://example.com/30.txt\", \"https://example.com/31.txt\", \"https://example.com/32.txt\",\r\n    \"https://example.com/33.txt\", \"https://example.com/34.txt\", \"https://example.com/35.txt\",\r\n    \"https://example.com/36.txt\", \"https://example.com/37.txt\", \"https://example.com/38.txt\",\r\n    \"https://example.com/39.txt\", \"https://example.com/40.txt\", \"https://example.com/41.txt\",\r\n    \"https://example.com/42.txt\", \"https://example.com/43.txt\", \"https://example.com/44.txt\",\r\n    \"https://example.com/45.txt\", \"https://example.com/46.txt\", \"https://example.com/47.txt\",\r\n    \"https://example.com/48.txt\", \"https://example.com/49.txt\", \"https://example.com/50.txt\",\r\n    \"https://example.com/51.txt\", \"https://example.com/52.txt\", \"https://example.com/53.txt\",\r\n    \"https://example.com/54.txt\", \"https://example.com/55.txt\", \"https://example.com/56.txt\",\r\n    \"https://example.com/57.txt\", \"https://example.com/58.txt\", \"https://example.com/59.txt\",\r\n    \"https://example.com/60.txt\", \"https://example.com/61.txt\", \"https://example.com/62.txt\",\r\n    \"https://example.com/63.txt\", \"https://example.com/64.txt\", \"https://example.com/65.txt\",\r\n    \"https://example.com/66.txt\", \"https://example.com/67.txt\", \"https://example.com/68.txt\",\r\n    \"https://example.com/69.txt\", \"https://example.com/70.txt\", \"https://example.com/71.txt\",\r\n    \"https://example.com/72.txt\", \"https://example.com/73.txt\", \"https://example.com/74.txt\",\r\n    \"https://example.com/75.txt\", \"https://example.com/76.txt\", \"https://example.com/77.txt\",\r\n    \"https://example.com/78.txt\", \"https://example.com/79.txt\", \"https://example.com/80.txt\",\r\n    \"https://example.com/81.txt\", \"https://example.com/82.txt\", \"https://example.com/83.txt\",\r\n    \"https://example.com/84.txt\", \"https://example.com/85.txt\", \"https://example.com/86.txt\",\r\n    \"https://example.com/87.txt\", \"https://example.com/88.txt\", \"https://example.com/89.txt\",\r\n    \"https://example.com/90.txt\", \"https://example.com/91.txt\", \"https://example.com/92.txt\",\r\n    \"https://example.com/93.txt\", \"https://example.com/94.txt\", \"https://example.com/95.txt\",\r\n    \"https://example.com/96.txt\", \"https://example.com/97.txt\", \"https://example.com/98.txt\",\r\n    \"https://example.com/99.txt\"\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/v1/datasets",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"datasets"
					]
				}
			},
			"response": []
		},
		{
			"name": "get dataset",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/api/v1/datasets/:datasetId?validationSplit=0.2&testSplit=0.3&seed=42",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"datasets",
						":datasetId"
					],
					"query": [
						{
							"key": "kFolds",
							"value": "3",
							"description": "Number of combinations unique partitioning into train/validation sets accross the dataset, often used in cross-validation.\nMutually exclusive with validationSplit parameter.",
							"disabled": true
						},
						{
							"key": "validationSplit",
							"value": "0.2",
							"description": "Ratio of training data reserved for validating the model during training.\nMutually exclusive with kFolds parameter."
						},
						{
							"key": "testSplit",
							"value": "0.3",
							"description": "Ratio of training data reserved for testing the model after training. \nCan only be set, if the dataset has no predefined test data, i.e. testDocuments is an empty list."
						},
						{
							"key": "seed",
							"value": "42",
							"description": "Seed used in random operations, e.g. shuffling the dataset. \nSet to get the same splits during multiple calls to the service."
						}
					],
					"variable": [
						{
							"key": "datasetId",
							"value": "2d397789-6236-481b-9ab9-06edb0323be4",
							"description": "Id of the dataset to retrieve."
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete dataset",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:5000/api/v1/datasets/:datasetId",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"datasets",
						":datasetId"
					],
					"variable": [
						{
							"key": "datasetId",
							"value": "3eaa13a1846c44a7918a35bc63dd5c9c",
							"description": "Id of the dataset which should be deleted."
						}
					]
				}
			},
			"response": []
		}
	]
}